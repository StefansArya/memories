{"version":3,"sources":["webpack://@wadahkode/memories/./src/dateParser.js","webpack://@wadahkode/memories/./src/memories.js","webpack://@wadahkode/memories/webpack/bootstrap","webpack://@wadahkode/memories/./index.js"],"names":["module","exports","date","Date","String","parsed","getTime","dateParser","prop","Object","Array","undefined","isDebug","this","length","map","item","key","execute","name","prefix","suffix","periode","unPeriode","datetime","second","minute","hour","day","week","month","year","moment","point","h","i","s","y","m","d","w","n","timeNow","Math","floor","Infinity","get","set","value","Boolean","console","log","hasOwnProperty","warn","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","memories","document","querySelectorAll","forEach","time","getAttribute","options","toString","replace","language","locale","timeZone","hour12","setInterval","async","timeAgo","getMemories","then","response","innerHTML"],"mappings":"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","file":"memories.min.js","sourcesContent":["/**\r\n * Mendapatkan total waktu\r\n *\r\n * @author wadahkode <mvp.dedefilaras@gmail.com>\r\n * @since version 1.1.2\r\n * @param {*} date string | object\r\n */\r\nconst dateParser = (date = Date | String) => {\r\n  let datetime, timestamp;\r\n  let parsed = undefined;\r\n\r\n  if (typeof date == \"string\") {\r\n    parsed = new Date(date);\r\n  } else {\r\n    parsed = date;\r\n  }\r\n  return parsed.getTime();\r\n};\r\n\r\nmodule.exports = dateParser;\r\n","const dateParser = require(\"./dateParser\");\r\n\r\n/**\r\n * Memories\r\n *\r\n * Mengubah waktu menjadi waktu moment\r\n *\r\n * Jika anda adalah seorang pengembang javascript pasti tidak akan asing dengan momentjs,\r\n * disini saya mencoba membuat dengan versi dari Indonesiaku tercinta.\r\n *\r\n * @author wadahkode <mvp.dedefilaras@gmail.com>\r\n * @since version 1.0.0\r\n */\r\nclass Memories {\r\n  /**\r\n   * @param {*} prop Object | Array\r\n   */\r\n  constructor(prop = Object | Array | undefined, isDebug = true) {\r\n    this.isDebug = isDebug;\r\n    this.prop = prop;\r\n\r\n    if (prop instanceof Array && prop.length >= 1) {\r\n      prop.map((item, key) => (this[key] = item));\r\n    } else if (prop instanceof Object) {\r\n      for (let name in prop) {\r\n        this[name] = prop[name];\r\n      }\r\n    } else {\r\n      return this.execute(isDebug);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mencetak waktu menjadi waktu yang sudah berlalu,\r\n   * jika kedua parameter dikosongkan, maka sistem akan menjalankan pengaturan bawaan.\r\n   *\r\n   * @param {*} prefix string\r\n   * @param {*} suffix object\r\n   */\r\n  timeAgo(prefix = \"\", suffix = {}) {\r\n    const periode = dateParser(new Date());\r\n    const unPeriode = dateParser(this.datetime);\r\n    const second = 1000,\r\n      minute = 60 * second,\r\n      hour = 60 * minute,\r\n      day = hour * 24,\r\n      week = day * 7,\r\n      month = day * 30,\r\n      year = day * 365;\r\n\r\n    const moment = (point, name) => {\r\n      const label = {\r\n        h: `${point} ${prefix != \"birthday\" ? \"hour ago\" : suffix[name]}`,\r\n        i: `${point} ${prefix != \"birthday\" ? \"minute ago\" : suffix[name]}`,\r\n        s: `${point} ${prefix != \"birthday\" ? \"second ago\" : suffix[name]}`,\r\n        y: `${point} ${prefix != \"birthday\" ? \"year ago\" : suffix[name]}`,\r\n        m: `${point} ${prefix != \"birthday\" ? \"month ago\" : suffix[name]}`,\r\n        d: `${point} ${prefix != \"birthday\" ? \"day ago\" : suffix[name]}`,\r\n        w: `${point} ${prefix != \"birthday\" ? \"week ago\" : suffix[name]}`,\r\n        n: `${point < 1 && prefix != \"birthday\" ? \"baru saja\" : suffix[name]}`,\r\n      };\r\n      return label[name];\r\n    };\r\n\r\n    const timeNow = periode > unPeriode && periode - unPeriode;\r\n\r\n    const parsed =\r\n      timeNow <= Math.floor(second * 1.5)\r\n        ? moment(Math.floor(timeNow / second), \"n\")\r\n        : timeNow > second && timeNow < minute\r\n        ? moment(Math.floor(timeNow / second), \"s\")\r\n        : timeNow > second && timeNow > minute && timeNow < hour\r\n        ? moment(Math.floor(timeNow / minute), \"i\")\r\n        : timeNow > minute && timeNow > hour && timeNow < day\r\n        ? moment(Math.floor(timeNow / hour), \"h\")\r\n        : timeNow > hour && timeNow > day && timeNow < week\r\n        ? moment(Math.floor(timeNow / day), \"d\")\r\n        : timeNow > day && timeNow > week && timeNow < month\r\n        ? moment(Math.floor(timeNow / week), \"w\")\r\n        : timeNow > week && timeNow > month && timeNow < year\r\n        ? moment(Math.floor(timeNow / month), \"m\")\r\n        : timeNow > month && timeNow > year\r\n        ? moment(Math.floor(timeNow / year), \"y\")\r\n        : Infinity;\r\n\r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n   * Untuk memberi pesan kesalahan jika properti kelas tidak diisi\r\n   * dan sistem debug telah dinyalakan\r\n   *\r\n   * @param {*} isDebug boolean\r\n   */\r\n  execute(isDebug = false) {\r\n    if (isDebug) {\r\n      if (this.prop instanceof Array && this.prop.length >= 1) {\r\n        delete this.prop;\r\n        return this;\r\n      } else if (this.prop instanceof Object) {\r\n        delete this.prop;\r\n        return this;\r\n      } else {\r\n        return this;\r\n      }\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n\r\n  get get() {}\r\n\r\n  /**\r\n   * Getter\r\n   *\r\n   * Fungsi untuk mendapatkan property\r\n   *\r\n   * @param {String} name string\r\n   */\r\n  get(name = String) {\r\n    return this[name];\r\n  }\r\n\r\n  /**\r\n   * Mengatur property yang akan ditambahkan\r\n   *\r\n   * @param {*} value object | string | boolean | undefined\r\n   */\r\n  set set(value = Date | String | Boolean | undefined) {\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Setter\r\n   *\r\n   * Fungsi untuk mengatur property\r\n   *\r\n   * @param {String|undefined} name string | undefined\r\n   * @param {String|Object} value object | string | boolean | undefined\r\n   */\r\n  set(name = String | undefined, value = Date | String | Boolean | undefined) {\r\n    const warning = {\r\n      noProp:\r\n        \"\\nWarning: Parameter diperlukan, kamu dapat mengaturnya dengan menggunakan metode memories.set(name, value)\\n\",\r\n      isFunction:\r\n        \"\\nWarning: Parameter dengan tipe [Function] tidak dapat diterima!\\n\",\r\n    };\r\n\r\n    switch (name) {\r\n      case \"isDebug\":\r\n        if (typeof value == \"boolean\" && value == true) {\r\n          delete this.prop;\r\n          console.log(\r\n            this.hasOwnProperty(\"datetime\") == false ? warning.noProp : this\r\n          );\r\n        } else {\r\n          delete this.prop;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        if (typeof value == \"function\") {\r\n          console.warn(warning.isFunction);\r\n          return this;\r\n        } else {\r\n          return (this[name] = value);\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Memories;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const memories = require(\"./src/memories\");\r\nconst article = document.querySelectorAll(\"time\");\r\n\r\narticle.forEach((time) => {\r\n  const prefix = time.getAttribute(\"prefix\");\r\n  const options = {\r\n    datetime: new Date(\r\n      time.getAttribute(\"datetime\").toString().replace(\",\", \"\")\r\n    ),\r\n    language: \"id-ID\",\r\n    locale: {\r\n      timeZone: \"Asia/Jakarta\",\r\n      hour12: false,\r\n    },\r\n  };\r\n\r\n  const refresh = setInterval(() => {\r\n    return getMemories(options, prefix).then((response) => {\r\n      if (response) {\r\n        time.innerHTML = response;\r\n      }\r\n      // clearInterval(refresh);\r\n    });\r\n  }, 10);\r\n});\r\n\r\n// Mengatur waktu standar menjadi waktu moment\r\nasync function getMemories(options = {}, prefix) {\r\n  const moment = new memories(options);\r\n\r\n  if (prefix != null) {\r\n    return await moment.timeAgo(prefix, {\r\n      y: \"tahun\",\r\n      m: \"bulan\",\r\n      d: \"hari\",\r\n      w: \"minggu\",\r\n      h: \"jam\",\r\n      i: \"menit\",\r\n      s: \"detik\",\r\n      n: \"baru saja\",\r\n    });\r\n  }\r\n  return await moment.timeAgo();\r\n}\r\n"],"sourceRoot":""}